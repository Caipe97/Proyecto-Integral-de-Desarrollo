// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegisterMainPage tests renders RegisterMainPage without crashing 1`] = `
<div
  className="contenedorRe"
>
  <Header
    history={
      Object {
        "push": [MockFunction],
      }
    }
    onLogout={[MockFunction]}
  />
  <div
    className="contenidoRe"
    style={
      Object {
        "alignContent": "center",
        "alignItems": "center",
        "justifyContent": "center",
        "textAlign": "center",
      }
    }
  >
    <div
      className="col1"
    >
      <img
        alt="imagen tracking"
        src="2pages.jpg"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
    </div>
    <div
      className="col3"
    >
      <h1
        style={
          Object {
            "color": "#002626",
            "fontFamily": "Arial",
            "left": "30px",
          }
        }
      >
        Buscamos
      </h1>
      <br />
      <p>
        Contribuir al desarrollo integral de los clientes mediante el diseño y la aplicación de un conjunto de servicios que fortalezcan la salud física y mental.
      </p>
    </div>
    <div
      className="col2"
      style={
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "justifyContent": "center",
          "paddingLeft": "10%",
          "paddingRight": "10%",
          "textAlign": "center",
        }
      }
    >
      <br />
      <p>
        Ayudar a nuestros socios a crear y mantener una excelente condición física a través de la nutrición y programas de entrenamiento.
      </p>
      <br />
      <p>
        Inculcar en niños, jóvenes y adultos, el valor de la salud y el ejercicio.
      </p>
      <br />
      <p>
        Participar proactivamente en el bienestar de las personas en su entorno social y laboral.
      </p>
      <br />
      <p>
        Brindar un servicio único y facilitar las herramientas del éxito.
      </p>
    </div>
  </div>
  <div
    className="sidebar"
  >
    <div
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "justifyContent": "center",
        }
      }
    >
      <div
        style={
          Object {
            "marginTop": 45,
          }
        }
      >
        <h1
          className="f1"
          style={
            Object {
              "color": "#002626",
              "fontFamily": "Arial",
            }
          }
        >
          Register
        </h1>
      </div>
      <form
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "column",
            "height": "100%",
            "justifyContent": "center",
          }
        }
      >
        <WithStyles(ForwardRef(TextField))
          label="Name"
          name="name"
          onChange={[Function]}
          required={true}
          type="name"
          value=""
        />
        <WithStyles(ForwardRef(TextField))
          label="Surname"
          name="surname"
          onChange={[Function]}
          required={true}
          type="surname"
          value=""
        />
        <WithStyles(ForwardRef(TextField))
          label="Email"
          name="email"
          onChange={[Function]}
          required={true}
          type="email"
          value=""
        />
        <WithStyles(ForwardRef(TextField))
          label="Password"
          name="password"
          onChange={[Function]}
          required={true}
          type="password"
          value=""
        />
        <div
          style={
            Object {
              "margin": 10,
            }
          }
        >
          <input
            id="masculino"
            name="gender"
            onChange={[Function]}
            type="radio"
            value="M"
          />
            
          <label>
            Masculino
          </label>
            
          <input
            id="femenino"
            name="gender"
            onChange={[Function]}
            type="radio"
            value="F"
          />
            
          <label>
            Femenino
          </label>
        </div>
        <r
          allowSameDay={false}
          customTimeInput={null}
          dateFormat="dd-MM-yyyy"
          dateFormatCalendar="LLLL yyyy"
          disabled={false}
          disabledKeyboardNavigation={false}
          dropdownMode="scroll"
          enableTabLoop={true}
          excludeScrollbar={true}
          focusSelectedMonth={false}
          monthsShown={1}
          name="date"
          nextMonthButtonLabel="Next Month"
          nextYearButtonLabel="Next Year"
          onBlur={[Function]}
          onCalendarClose={[Function]}
          onCalendarOpen={[Function]}
          onChange={[Function]}
          onClickOutside={[Function]}
          onFocus={[Function]}
          onInputClick={[Function]}
          onInputError={[Function]}
          onKeyDown={[Function]}
          onMonthChange={[Function]}
          onSelect={[Function]}
          onYearChange={[Function]}
          placeholderText="birthday"
          preventOpenOnFocus={false}
          previousMonthButtonLabel="Previous Month"
          previousYearButtonLabel="Previous Year"
          readOnly={false}
          renderDayContents={[Function]}
          selected=""
          shouldCloseOnSelect={true}
          showFourColumnMonthYearPicker={false}
          showFullMonthYearPicker={false}
          showMonthYearPicker={false}
          showPopperArrow={true}
          showPreviousMonths={false}
          showQuarterYearPicker={false}
          showTimeInput={false}
          showTimeSelect={false}
          showTwoColumnMonthYearPicker={false}
          showYearPicker={false}
          strictParsing={false}
          timeCaption="Time"
          timeInputLabel="Time"
          timeIntervals={30}
          withPortal={false}
          yearItemNumber={12}
        />
        <WithStyles(ForwardRef(TextField))
          label="Weight"
          name="weight"
          onChange={[Function]}
          required={true}
          type="weight"
          value=""
        />
        <WithStyles(ForwardRef(TextField))
          label="Height"
          name="height"
          onChange={[Function]}
          required={true}
          type="height"
          value=""
        />
        <button
          className="button"
          onClick={[Function]}
        >
          Registrarse
        </button>
        <p />
        <p
          style={
            Object {
              "marginBlock": "0em",
              "marginTop": "10%",
            }
          }
        >
          Si ya tenes una cuenta?
        </p>
        <Link
          style={
            Object {
              "color": "black",
            }
          }
          to="/"
        >
          Login
        </Link>
      </form>
    </div>
  </div>
  <Footer />
</div>
`;
